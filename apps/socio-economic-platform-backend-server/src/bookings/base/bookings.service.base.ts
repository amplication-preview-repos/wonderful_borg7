/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { PrismaService } from "../../prisma/prisma.service";
import { Prisma, Bookings as PrismaBookings } from "@prisma/client";

export class BookingsServiceBase {
  constructor(protected readonly prisma: PrismaService) {}

  async count(args: Omit<Prisma.BookingsCountArgs, "select">): Promise<number> {
    return this.prisma.bookings.count(args);
  }

  async bookingsItems(
    args: Prisma.BookingsFindManyArgs
  ): Promise<PrismaBookings[]> {
    return this.prisma.bookings.findMany(args);
  }
  async bookings(
    args: Prisma.BookingsFindUniqueArgs
  ): Promise<PrismaBookings | null> {
    return this.prisma.bookings.findUnique(args);
  }
  async createBookings(
    args: Prisma.BookingsCreateArgs
  ): Promise<PrismaBookings> {
    return this.prisma.bookings.create(args);
  }
  async updateBookings(
    args: Prisma.BookingsUpdateArgs
  ): Promise<PrismaBookings> {
    return this.prisma.bookings.update(args);
  }
  async deleteBookings(
    args: Prisma.BookingsDeleteArgs
  ): Promise<PrismaBookings> {
    return this.prisma.bookings.delete(args);
  }
}
