/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { PrismaService } from "../../prisma/prisma.service";
import { Prisma, Shops as PrismaShops } from "@prisma/client";

export class ShopsServiceBase {
  constructor(protected readonly prisma: PrismaService) {}

  async count(args: Omit<Prisma.ShopsCountArgs, "select">): Promise<number> {
    return this.prisma.shops.count(args);
  }

  async shopsItems(args: Prisma.ShopsFindManyArgs): Promise<PrismaShops[]> {
    return this.prisma.shops.findMany(args);
  }
  async shops(args: Prisma.ShopsFindUniqueArgs): Promise<PrismaShops | null> {
    return this.prisma.shops.findUnique(args);
  }
  async createShops(args: Prisma.ShopsCreateArgs): Promise<PrismaShops> {
    return this.prisma.shops.create(args);
  }
  async updateShops(args: Prisma.ShopsUpdateArgs): Promise<PrismaShops> {
    return this.prisma.shops.update(args);
  }
  async deleteShops(args: Prisma.ShopsDeleteArgs): Promise<PrismaShops> {
    return this.prisma.shops.delete(args);
  }
}
