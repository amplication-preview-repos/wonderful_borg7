/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { PrismaService } from "../../prisma/prisma.service";
import { Prisma, Reviews as PrismaReviews } from "@prisma/client";

export class ReviewsServiceBase {
  constructor(protected readonly prisma: PrismaService) {}

  async count(args: Omit<Prisma.ReviewsCountArgs, "select">): Promise<number> {
    return this.prisma.reviews.count(args);
  }

  async reviewsItems(
    args: Prisma.ReviewsFindManyArgs
  ): Promise<PrismaReviews[]> {
    return this.prisma.reviews.findMany(args);
  }
  async reviews(
    args: Prisma.ReviewsFindUniqueArgs
  ): Promise<PrismaReviews | null> {
    return this.prisma.reviews.findUnique(args);
  }
  async createReviews(args: Prisma.ReviewsCreateArgs): Promise<PrismaReviews> {
    return this.prisma.reviews.create(args);
  }
  async updateReviews(args: Prisma.ReviewsUpdateArgs): Promise<PrismaReviews> {
    return this.prisma.reviews.update(args);
  }
  async deleteReviews(args: Prisma.ReviewsDeleteArgs): Promise<PrismaReviews> {
    return this.prisma.reviews.delete(args);
  }
}
