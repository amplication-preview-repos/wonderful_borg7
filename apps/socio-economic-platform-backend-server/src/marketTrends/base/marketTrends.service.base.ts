/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { PrismaService } from "../../prisma/prisma.service";
import { Prisma, MarketTrends as PrismaMarketTrends } from "@prisma/client";

export class MarketTrendsServiceBase {
  constructor(protected readonly prisma: PrismaService) {}

  async count(
    args: Omit<Prisma.MarketTrendsCountArgs, "select">
  ): Promise<number> {
    return this.prisma.marketTrends.count(args);
  }

  async marketTrendsItems(
    args: Prisma.MarketTrendsFindManyArgs
  ): Promise<PrismaMarketTrends[]> {
    return this.prisma.marketTrends.findMany(args);
  }
  async marketTrends(
    args: Prisma.MarketTrendsFindUniqueArgs
  ): Promise<PrismaMarketTrends | null> {
    return this.prisma.marketTrends.findUnique(args);
  }
  async createMarketTrends(
    args: Prisma.MarketTrendsCreateArgs
  ): Promise<PrismaMarketTrends> {
    return this.prisma.marketTrends.create(args);
  }
  async updateMarketTrends(
    args: Prisma.MarketTrendsUpdateArgs
  ): Promise<PrismaMarketTrends> {
    return this.prisma.marketTrends.update(args);
  }
  async deleteMarketTrends(
    args: Prisma.MarketTrendsDeleteArgs
  ): Promise<PrismaMarketTrends> {
    return this.prisma.marketTrends.delete(args);
  }
}
