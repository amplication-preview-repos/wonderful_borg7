/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { PrismaService } from "../../prisma/prisma.service";
import { Prisma, Goods as PrismaGoods } from "@prisma/client";

export class GoodsServiceBase {
  constructor(protected readonly prisma: PrismaService) {}

  async count(args: Omit<Prisma.GoodsCountArgs, "select">): Promise<number> {
    return this.prisma.goods.count(args);
  }

  async goodsItems(args: Prisma.GoodsFindManyArgs): Promise<PrismaGoods[]> {
    return this.prisma.goods.findMany(args);
  }
  async goods(args: Prisma.GoodsFindUniqueArgs): Promise<PrismaGoods | null> {
    return this.prisma.goods.findUnique(args);
  }
  async createGoods(args: Prisma.GoodsCreateArgs): Promise<PrismaGoods> {
    return this.prisma.goods.create(args);
  }
  async updateGoods(args: Prisma.GoodsUpdateArgs): Promise<PrismaGoods> {
    return this.prisma.goods.update(args);
  }
  async deleteGoods(args: Prisma.GoodsDeleteArgs): Promise<PrismaGoods> {
    return this.prisma.goods.delete(args);
  }
}
