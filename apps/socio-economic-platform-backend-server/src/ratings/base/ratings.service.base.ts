/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { PrismaService } from "../../prisma/prisma.service";
import { Prisma, Ratings as PrismaRatings } from "@prisma/client";

export class RatingsServiceBase {
  constructor(protected readonly prisma: PrismaService) {}

  async count(args: Omit<Prisma.RatingsCountArgs, "select">): Promise<number> {
    return this.prisma.ratings.count(args);
  }

  async ratingsItems(
    args: Prisma.RatingsFindManyArgs
  ): Promise<PrismaRatings[]> {
    return this.prisma.ratings.findMany(args);
  }
  async ratings(
    args: Prisma.RatingsFindUniqueArgs
  ): Promise<PrismaRatings | null> {
    return this.prisma.ratings.findUnique(args);
  }
  async createRatings(args: Prisma.RatingsCreateArgs): Promise<PrismaRatings> {
    return this.prisma.ratings.create(args);
  }
  async updateRatings(args: Prisma.RatingsUpdateArgs): Promise<PrismaRatings> {
    return this.prisma.ratings.update(args);
  }
  async deleteRatings(args: Prisma.RatingsDeleteArgs): Promise<PrismaRatings> {
    return this.prisma.ratings.delete(args);
  }
}
