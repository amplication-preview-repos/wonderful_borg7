/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { PrismaService } from "../../prisma/prisma.service";
import {
  Prisma,
  JobOpportunities as PrismaJobOpportunities,
} from "@prisma/client";

export class JobOpportunitiesServiceBase {
  constructor(protected readonly prisma: PrismaService) {}

  async count(
    args: Omit<Prisma.JobOpportunitiesCountArgs, "select">
  ): Promise<number> {
    return this.prisma.jobOpportunities.count(args);
  }

  async jobOpportunitiesItems(
    args: Prisma.JobOpportunitiesFindManyArgs
  ): Promise<PrismaJobOpportunities[]> {
    return this.prisma.jobOpportunities.findMany(args);
  }
  async jobOpportunities(
    args: Prisma.JobOpportunitiesFindUniqueArgs
  ): Promise<PrismaJobOpportunities | null> {
    return this.prisma.jobOpportunities.findUnique(args);
  }
  async createJobOpportunities(
    args: Prisma.JobOpportunitiesCreateArgs
  ): Promise<PrismaJobOpportunities> {
    return this.prisma.jobOpportunities.create(args);
  }
  async updateJobOpportunities(
    args: Prisma.JobOpportunitiesUpdateArgs
  ): Promise<PrismaJobOpportunities> {
    return this.prisma.jobOpportunities.update(args);
  }
  async deleteJobOpportunities(
    args: Prisma.JobOpportunitiesDeleteArgs
  ): Promise<PrismaJobOpportunities> {
    return this.prisma.jobOpportunities.delete(args);
  }
}
